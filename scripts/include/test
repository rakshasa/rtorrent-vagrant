#!/bin/bash

FAILED=0
LAST_VERIFY=

start_nodes() {
    echo "starting clients"
    "${SCRIPT_DIR}/start-rtorrent"

    echo "waiting for clients"

    if [ -n "${ACTIVE_NODES}" ]; then
        WAIT_NODES="${ACTIVE_NODES}" wait_for_nodes "is-client-active"
    else
        wait_for_nodes "is-client-active"
    fi
}

create_torrents() {
    "${SCRIPT_DIR}/test-create-all"

    local torrent=

    # TODO: Use variable.
    for torrent in test_h4 test_h6 test_u4 test_u6; do
        WAIT_NODES="${ACTIVE_NODES}" wait_for_nodes is-loaded ${torrent}
        echo "${torrent}: loaded"
    done
}

verify_seeds() {
    local torrent=

    # TODO: Use variable.
    for torrent in test_h4 test_h6 test_u4 test_u6; do
        WAIT_NODES=node1 WAIT_TIMEOUT=30 wait_for_nodes is-completed ${torrent}
        echo "${torrent}: seed ready"
    done
}

verify_completed() {
    local node="${1:?Missing node.}"
    local torrent="${2:?Missing torrent.}"
    local message="${3:?Missing message.}"

    [ -z "${LAST_VERIFY}" ] && echo
    LAST_VERIFY="${message}"

    echo -n "${message}... "

    if "${SCRIPT_DIR}/is-completed" "${node}" "${torrent}"; then
        echo "succeeded"
    else
        echo "failed"
        (( FAILED++ ))
    fi

    return 0
}

verify_incompleted() {
    local node="${1:?Missing node.}"
    local torrent="${2:?Missing torrent.}"
    local message="${3:?Missing message.}"

    [ -z "${LAST_VERIFY}" ] && echo
    LAST_VERIFY="${message}"

    echo -n "${message}... "

    if "${SCRIPT_DIR}/is-completed" "${node}" "${torrent}"; then
        echo "failed"
        (( FAILED++ ))
    else
        echo "succeeded"
    fi

    return 0
}

clean_all() {
    set -e

    echo "clean all"

    "${SCRIPT_DIR}/test-delete-all"
    WAIT_TIMEOUT=20 wait_for_nodes is-empty

    "${SCRIPT_DIR}/stop-rtorrent"; sleep 1
    "${SCRIPT_DIR}/config-clear"
}

setup_default() {
    "${SCRIPT_DIR}/build-tracker"

    ${SCRIPT_DIR}/ip-up-4 "node1 node2"
    ${SCRIPT_DIR}/ip-up-6 "node1 node3"
    ${SCRIPT_DIR}/ip-down-4 "node3"
    ${SCRIPT_DIR}/ip-down-6 "node2"
}

setup_default_v4() {
    IPV4_ONLY=yes "${SCRIPT_DIR}/build-tracker"

    ${SCRIPT_DIR}/ip-up-4 "node1 node2"
    ${SCRIPT_DIR}/ip-up-6 "node3"
    ${SCRIPT_DIR}/ip-down-4 "node3"
    ${SCRIPT_DIR}/ip-down-6 "node1 node2"
}

setup() {
    local config=${1:?Missing config setup.}

    echo "setting up config '${config}'"

    case ${config} in
        "default")
            setup_default &> /dev/null
            ;;
        "default_v4")
            setup_default_v4 &> /dev/null
            ;;
    esac

    start_nodes
    create_torrents
    verify_seeds

    # TODO: Replace with check to see if we have in-progess.
    sleep 20
    set +e
}

exit_test() {
    echo

    if [[ ${FAILED} -eq 0 ]]; then
        echo "done: success"
    else
        echo "done: failed:${FAILED}"
    fi

    exit ${FAILED}
}
