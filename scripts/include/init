#!/usr/bin/env bash

set -e

DEBUG=${DEBUG:-0}

SCRIPT_DIR="$(dirname $(dirname ${BASH_SOURCE[0]}))"
ROOT_DIR="$(dirname ${SCRIPT_DIR})"
DATA_DIR="${ROOT_DIR}/data"
TEST_DIR="${ROOT_DIR}/test"

RPC_CLIENT="${SCRIPT_DIR}/xmlrpc2scgi.py"

DATA_VM_TORRENTS="/data/torrents"
DATA_HOST_WATCH="${DATA_DIR}/shared/watch"

TORRENT_VM_DIR="/data/torrents"
TORRENT_SHARED_DIR="${DATA_DIR}/shared/torrents"

GIT_RTORRENT="${DATA_DIR}/builder/rtorrent"
GIT_LIBTORRENT="${DATA_DIR}/builder/libtorrent"

NC='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'

if [ -z "${NODES}" ]; then
  NODES="$((cd ${DATA_DIR} && ls -d node* || :) 2> /dev/null)"
fi

call_quiet() {
  local oldstate="$(shopt -op errexit)"; set -e
  local command="${1:?Missing call quiet command argument.}"
  local call_log="$(${command} 2>&1)"
  local call_result=$?

  [ ${call_result} -eq 0 ] || echo "${call_log}"
  eval "${oldstate}"

  return ${call_result}
}

init_logging() {
  local log_category="${1:?Missing category name.}"
  local log_name="${2:?Missing log name.}"
  local log_dir="${ROOT_DIR}/logs"
  local log_target="${log_category}.logs/${log_name}.$(date '+%Y-%m-%d_%H:%M:%S')"
  local log_file="${ROOT_DIR}/logs/${log_target}"

  (cd "${ROOT_DIR}" && mkdir -p "logs/${log_category}.logs")
  echo "started logging category:${log_category} name:${log_name}" > "${log_file}"

  if [[ ${BASH_VERSINFO[0]} > 4 ]] || ( [[ ${BASH_VERSINFO[0]} == 4 ]] && [[ ${BASH_VERSINFO[1]} > 0 ]] ); then
    # exec 50>> "${log_file}"
    # export BASH_XTRACEFD=50
    # set -x
    :
  else
    echo "not logging 'set -x' output, bash version >= 4.1 required" >>{log}
  fi

  exec 1> >(tee -ia "${log_file}")
  exec 2> >(tee -ia "${log_file}")
  exec {log}>> "${log_file}"

  ln -fs "./${log_target}" "${log_dir}/${log_category}.${log_name}"
}
